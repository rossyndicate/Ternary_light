[["index.html", "Ternary Light Partitioning Part 1 Introduction 1.1 Workflow", " Ternary Light Partitioning Dr. Matthew Ross Dr. Jim Jawitz Dr. Matt Cohen December 14, 2023 Part 1 Introduction Water clarity and its components (chlorophyll a, total suspended sediment (TSS), and dissolved organic carbon (DOC)) are among the most functionally important and socially-relevant aspects of water quality. Here we propose a method for systematically evaluating the relative contribution of each water clarity component to total clarity [[water column light extinction?]], a value derived from Secchi disk depth. We further borrow a visualization tool from soil analyses, the ternary diagram to describe these contributions: we build ternary diagrams that partition light partitioning between DOC mass, derived algal biomass, and derived non-algal mass. [[add conceptual ternary diagram]] 1.1 Workflow [[is it intentional to use particle and mass/biomass interchangeably? Consider a high-level consolidation of language below, I changed the above text to be mass/biomass.]] In its simplest form our workflow contains the following steps: Download all of AquaSat, a data set of four water quality parameters collated for the conterminous United States, and join the AquaSat pieces together to create a harmonized data set of the four parameters. Investigate the relationship between chlorohpyll a, TIS (inorganic sediment, derived from TSS), algal biomass (derived from chlorophyll a) and non-algal particles (derived from algal biomass and DOC). Create a dataset of algal biomass, non-algal particle mass, and dissolved organic carbon mass. Investigate data quality of AquaSat and select a subset of data where chlorophyll a, DOC, TSS and Secchi and create a dataset where all parameters were all measured simultaneously. Build a model that predicts light extinction using algal biomass, non-algal particles, and DOC where light extinction (K) is defined as: \\[ K = 1.4 / {Sechhi\\:Disk\\:Depth} \\] [[note, the value I’ve seen for the constant is 1.7 (see Poole and Atkins 1929), maybe cite here the associated paper for use of 1.4?]] Use this model to extract light extinction coefficients relative to each parameter (algal biomass, non-algal mass, DOC mass) and apply this model to visualizations in ternary space. Explore systematic controls on relative contribution to light extinction over space and time across CONUS. "],["download-and-join.html", "Part 2 Download and Join 2.1 AquaSat download 2.2 AquaSat Read and join. 2.3 Data Evalualtion and Subset 2.4 Where are sites with simultaneous observations of clarity constituents? 2.5 What is the general relationship between variables in log-log space?", " Part 2 Download and Join I recognize that I should probably just use targets for this part, but… I (Matt Ross) don’t know how to use targets yet! So, instead we are just going to have several code chunks here that just downloads all the data directly from figshare, preps data for analysis, etc… and the chunks will just be set to eval = FALSE, so they won’t run unless you manually run it. That way this book can run in reasonable timeframes, most other chunks will run based on “caching.” Though, some data intensive tasks, will also simply have eval = F to save runtime. These chunks will be flagged explicitly, and all their data products saved to a data/out folder. 2.1 AquaSat download AquaSat is held in a figshare collection with many pieces. For this work we will need most of the data held there, which we will access through direct download. The URLs are just from the AquaSat collection links. # check to see if the data have been downloaded. we assume that if the directory exists, data have been downloaded. download_dir &lt;- &quot;../data/in/&quot; if(!dir.exists(download_dir)) { # if it doesn&#39;t, make the folder and download AquaSat files dir.create(download_dir, recursive = TRUE) ## AquaSat Download data # In-situ raw data with methods download.file(&#39;https://figshare.com/ndownloader/files/15475154&#39;, mode = &#39;wb&#39;,# Needs to be written in binary for some reason destfile = file.path(download_dir, &#39;aq_situ.zip&#39;)) unzip(file.path(download_dir, &#39;aq_situ.zip&#39;), exdir = file.path(download_dir, &#39;aq_situ&#39;)) # Site Inventory with type, because it&#39;s not in the other inventory # Stupid aquasat developer (me/mattross!) download.file(&#39;https://figshare.com/ndownloader/files/24720434&#39;, mode = &#39;wb&#39;, destfile = file.path(download_dir, &#39;inv.feather&#39;)) # Unique site inventory download.file(&#39;https://figshare.com/ndownloader/files/24720437&#39;, mode = &#39;wb&#39;, destfile = file.path(download_dir, &#39;unq_site.feather&#39;)) ## Ecoregion data download.file(&#39;https://gaftp.epa.gov/EPADataCommons/ORD/Ecoregions/cec_na/na_cec_eco_l2.zip&#39;, destfile = file.path(download_dir, &#39;eco2.zip&#39;)) unzip(file.path(download_dir, &#39;eco2.zip&#39;), exdir = file.path(download_dir, &#39;ecoregion&#39;)) } 2.2 AquaSat Read and join. [[note here: ‘data/in/clouds.feather’ nor WRS2 shapefile ‘data/in/wrs/WRS2_descending.shp’ are parts of the downloaded files, commented out for rendering purposes]] data_out_dir &lt;- &quot;../data/out/&quot; # this chunk only needs to be run if the out directory doesn&#39;t exist if(!dir.exists(data_out_dir)) { # grab monitoring location identifier (SiteID/MonitorongLocationIdentifier) and # short-hand site type (river/lake/estuary/facilty) inv_type &lt;- read_feather(file.path(download_dir, &#39;inv.feather&#39;)) %&gt;% select(SiteID = MonitoringLocationIdentifier, type = ResolvedMonitoringLocationTypeName) %&gt;% mutate(type = if_else(grepl(&#39;Lake&#39;,type),&#39;Lake&#39;,type)) %&gt;% #drop &#39;Facility&#39; types filter(type != &#39;Facility&#39;) # combine with site lat/long from unique site inventory site_vis &lt;- read_feather(file.path(download_dir, &#39;unq_site.feather&#39;)) %&gt;% inner_join(inv_type) %&gt;% distinct(SiteID,lat,long,type) # load complete in-situ data, 6.5 million records. in_vis &lt;- read_csv(file.path(download_dir, &#39;aq_situ/in-situ/wqp_lagos_unity.csv&#39;)) # # Get clouds and path row sites # clouds &lt;- read_feather(&#39;data/in/clouds.feather&#39;) %&gt;% # mutate(date = as.Date(SENSING_TIME)) %&gt;% # select(PATH = WRS_PATH, # ROW = WRS_ROW, # clouds = CLOUD_COVER, # date) # # site_path_row &lt;- site_vis %&gt;% # st_as_sf(.,coords = c(&#39;long&#39;,&#39;lat&#39;), crs = 4326) %&gt;% # st_join(.,st_read(&#39;data/in/wrs/WRS2_descending.shp&#39;)) %&gt;% # select(SiteID, PATH, ROW) %&gt;% # as_tibble(.) %&gt;% # select(-geometry) } 2.3 Data Evalualtion and Subset 2.3.1 Selecting only simultaneous observations For the purposes of this analysis, we only care about observations that have complete simultaneous observations across the four parameters of interest: chlorophyll a, DOC, TSS, and Secchi disk depth. if(!dir.exists(data_out_dir)) { #create directory path dir.create(data_out_dir, recursive = TRUE) simul_vis &lt;- in_vis %&gt;% select(-p_sand) %&gt;% filter(if_all(c(chl_a,doc,tss,secchi), ~!is.na(.))) %&gt;% inner_join(site_vis) %&gt;% #Set some reasonable thresholds, AquaSat is too generous filter(secchi &lt; 15, chl_a &lt; 1000,## ug/L tss &lt; 1000, ## mg/L doc &lt; 50) no_secchi &lt;- in_vis %&gt;% select(-p_sand) %&gt;% filter(if_all(c(chl_a,doc,tss), ~!is.na(.))) %&gt;% inner_join(site_vis) %&gt;% #Set some reasonable thresholds, AquaSat is too generous filter( chl_a &lt; 1000,## ug/L tss &lt; 1000, ## mg/L doc &lt; 50) # For speed write_feather(simul_vis, file.path(data_out_dir, &#39;simul.feather&#39;)) #For reproducibility write_csv(simul_vis, file.path(data_out_dir, &#39;simul.csv&#39;)) #For speed write_feather(no_secchi, file.path(data_out_dir, &#39;no_secchi.feather&#39;)) } 2.4 Where are sites with simultaneous observations of clarity constituents? simul_vis &lt;- read_csv(file.path(data_out_dir, &#39;simul.csv&#39;)) ## Rows: 100853 Columns: 12 ## ── Column specification ──────────────────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (3): SiteID, source, type ## dbl (7): chl_a, doc, secchi, tis, tss, lat, long ## lgl (1): date_only ## dttm (1): date_unity ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. unique_simul &lt;- simul_vis %&gt;% distinct(SiteID, lat, long, type) %&gt;% st_as_sf(.,coords = c(&#39;long&#39;,&#39;lat&#39;), crs = 4326) mapviewOptions(fgb = FALSE) # remove flat geobuff which breaks display mapview(unique_simul, zcol = &#39;type&#39;) 2.5 What is the general relationship between variables in log-log space? log_simul &lt;- simul_vis %&gt;% mutate(across(c(secchi,chl_a,tss,doc,tis), log10)) %&gt;% filter(if_all(c(chl_a,doc,secchi,tss), ~!is.na(.) &amp; . &lt; Inf &amp; . &gt; -Inf)) log_simul %&gt;% # randomly sample 20% of each site type to display info. sample_frac(0.2) %&gt;% ungroup() %&gt;% select(secchi,chl_a,tss,doc,type) %&gt;% ggpairs(lower = list(continuous = wrap(&#39;points&#39;,shape = 1)), diag = list(continuous = wrap(&#39;densityDiag&#39;, alpha = 0.5)), mapping = ggplot2::aes(color = type), columns = c(&#39;secchi&#39;,&#39;chl_a&#39;,&#39;tss&#39;,&#39;doc&#39;)) + theme_few() + scale_color_manual(values = c(&#39;seagreen3&#39;,&#39;skyblue3&#39;,&#39;saddlebrown&#39;)) "],["data-quality-assessments.html", "Part 3 Data quality assessments 3.1 Chl-a to biomass 3.2 Final Decision", " Part 3 Data quality assessments Note, also eval = F to save computation time 3.1 Chl-a to biomass While it is more common in coastal and oceanic research, inland water scientists rarely measure water clarity constituents in the way that is most directly transferable to our research question. Ideally we would routinely measure concentrations of algae biomass, non-algal particles (including inorganic sediment and organic sediment, I like to call this stuff dead suspended sediment, but I guess NAP is fine), and dissolved organic carbon. These constituents all alter light penetration in water, but they are mutually exclusive groups with no measurement overlap between algal particles and NAP for example. However, this is not what we usually measure. Instead, we have rich datasets of things that could indicate our desired constituents. These map as basically. Chlorophyll-a -&gt; proxy for algae biomass. Total suspended solids (tss) -&gt; All suspended solids, subtract algae biomass = NAP DOC -&gt; DOC! That means we have to basically do one key calculation. Convert chl-a to biomass. Then subtract that from tss and assume that is NAP. While this is a absurdly simple calculation it is filled with dangers. The relationship between chl-a and algae biomass depends on temperature and nutrients and species and is not universal. Most studies focus on Chl:C ratios, but we are interested in Chl:Biomass ratio, for which there are much fewer studies, though some studies below suggest a range of 0.005 to 0.1 Chl:biomass. (I need to find the C:Biomass study I used forever ago.) Papers that help: https://aslopubs.onlinelibrary.wiley.com/doi/full/10.1002/lno.10338 https://pubs.usgs.gov/twri/twri9a7/twri9a7_7.4.pdf https://www.researchgate.net/publication/230056019_Relationship_between_Chlorophyll-a_Concentration_and_Phytoplankton_Biomass_in_Several_Reservoirs_in_Czechoslovakia/link/5cb56c164585156cd79af804/download https://archimer.ifremer.fr/doc/2005/publication-1172.pdf 3.1.1 Approach Our philosphy here is that we will use chl-a directly as a proxy for algal biomass to minimize the number of transformations to this data, since we are primarily interested in how algae alters light attenuation, regardless of how we estimate algae. However, we still need to calculate Non-Algal Particle mass. For that we will use a range of values of Chl:biomass and show the impact of picking a variety of ranges. Caveats We don’t have a true NAP to compare how accurate our approach is. We do have Inorganic Sediment, but that is not the same thing as non-algal particles, since it excludes particulate organic carbon. Still, where we have it, we will examine the relationship between NAP and TIS (total inorganic sediment). Not entirely sure how we propogate this uncertainty downstream? Pick an average? Code to apply varying algal biomass ratios. in_vis &lt;- read_feather(file.path(data_out_dir, &#39;simul.feather&#39;)) no_sech &lt;- read_feather(file.path(data_out_dir, &#39;no_secchi.feather&#39;)) range &lt;- c(50, 100, 200, 234) #Couldn&#39;t think of a more clever way to multiply #chl_a by the range of values, so just made # dataframe 4 times bigger with new column called ratio. nap_test &lt;- expand_grid(no_sech,chl_ratio = range) %&gt;% mutate(power = if_else(chl_ratio == 234, 0.57, 1), chl_a_biomass = exp(log(chl_ratio/1000)+log(chl_a)*power), tss_dead = tss-chl_a_biomass) 3.1.2 Simple evaluations of conversion 3.1.2.1 Negative tss_dead Probably the simplest way to see which ratios are more appropriate is to look at how that impacts how many tss_dead observations are negative (impossible). Code for table. neg_tss_dead &lt;- nap_test %&gt;% mutate(negative = ifelse(tss_dead &lt; 0, &#39;negative&#39;, &#39;positive&#39;)) %&gt;% group_by(negative,chl_ratio) %&gt;% count() %&gt;% pivot_wider(names_from = &#39;negative&#39;,values_from = &#39;n&#39;) %&gt;% mutate(percent_neg = negative/(positive+negative)*100) %&gt;% kable(caption = &quot;Varying chlorohpyll ratios and summary of negative tss_dead results.&quot;) Table 3.1: Varying chlorohpyll ratios and summary of negative tss_dead results. chl_ratio negative positive percent_neg 50 341 163822 0.2077204 100 1324 162839 0.8065155 200 6912 157251 4.2104494 234 567 163596 0.3453884 Well, that sort of produces obvious results. Smaller ratios mean, less negative NAP estimates, but there is a big increase between 100-200, making me think the “correct” ratio may be in there somewhere. 3.1.2.2 Relationship between chl-a and tss_dead If you recall from the previous section, there was a strong linear relationship between chl-a and tss across all sites and water types (r2 &gt; 0.35). One effect we’d expect to see with the tss_dead estimate is that this relationship should decay. While there are reasons for chl-a to be correlated with tss (sediment brings nutrients for example), chl-a also includes algal cells which are suspended particles themselves. If this approach worked well, we should see weaker relationships between tss_dead and chl-a Code for figure. #Subset for plotting purposes nap_test %&gt;% #Remove negatives and very small numbers (ug/L of sediment is basically zero) filter(tss_dead &gt; 0.001) %&gt;% sample_frac(0.1) %&gt;% ggplot(., aes(chl_a,tss_dead,color = type)) + facet_wrap(~chl_ratio) + geom_point() + scale_x_log10() + scale_y_log10() + stat_poly_eq() + theme_few() + scale_color_manual(values = c(&#39;seagreen3&#39;,&#39;skyblue3&#39;,&#39;saddlebrown&#39;)) Figure 3.1: At low chl_ratios (10/20), there is really no change to the correlation between tss and chl_a, but at higher ratios (100/200), the relationship does breakdown some, though not completely What to do with this? 234*chl^0.57 seems logical but still high correlation in lakes between tss/chl_a, but that may be a real thing for lakes? (corr is actually higher with this approach) 3.1.3 Light attenuation model exploration Model assumptions Not searching for intercept assuming observed 0.15 coefficient for intercept (pure water attenuation) For now, not doing the middle 2.5-97.5% of data, can add back in. Normality assumptions aren’t fully met Code for this section. nap_est_no_secchi &lt;- nap_test %&gt;% ungroup() %&gt;% filter(tss_dead &gt; 0.01, secchi &lt; 15 | is.na(secchi)) %&gt;% mutate(secchi = ifelse(secchi &lt; 0.1,0.1,secchi), kd = (1/(secchi))) write_feather(nap_est_no_secchi %&gt;% filter(chl_ratio == 234), file.path(data_out_dir, &#39;no_secchi_clean.feather&#39;)) nap_est &lt;- nap_est_no_secchi %&gt;% filter(!is.na(secchi)) k_w &lt;- 1/1.5/max(nap_est$secchi) kd_mod &lt;- function(df){ mod &lt;- lm((kd-k_w) ~ 0 + tss_dead + doc + chl_a, data = df) } kd_resid_extract &lt;- function(df,mod){ df &lt;- df %&gt;% mutate(residuals = mod$residuals, pred = mod$fitted.values + k_w) } # nap_est &lt;- nap_est %&gt;% # filter(SiteID %in% fine_sites$SiteID) nap_mods &lt;- group_by(nap_est,chl_ratio) %&gt;% nest() %&gt;% mutate(mods = map(data,kd_mod), data = map2(data, mods, kd_resid_extract)) mod234 &lt;- nap_mods %&gt;% filter(chl_ratio == 234) nap_resid &lt;- nap_mods %&gt;% select(-mods) %&gt;% unnest(data) %&gt;% mutate(ratio_rmse = paste(&#39;ratio =&#39;,chl_ratio,&#39;, r^2 =&#39;, round(cor(pred,kd)^2,2)), year = year(date_unity)) kd_obs_pred &lt;- nap_resid %&gt;% sample_frac(0.2) %&gt;% ggplot(., aes(kd,pred, color = year(date_unity))) + geom_point(shape = 1) + facet_wrap(~ratio_rmse) + theme_few() + xlab(&#39;kd (1/secchi)&#39;) + ylab(&#39;predicted kd&#39;) + scale_x_log10() + scale_y_log10() + scale_color_viridis_c() + stat_smooth(method = &#39;lm&#39;,se = F, color = &#39;black&#39;) + geom_abline(intercept = 0, slope = 1, col = &#39;red&#39;) (#fig:fig kd-pred-obs)Modelled light extinction coefficient (Kd) versus observed, red line is 1:1 line and blue is line of best fit, r^2 hardly varies between chlorophyll a conversion approaches. 3.1.4 Variation in slopes w/ different chl biomass ratios Do all our painstaking decisions make a difference for model slopes? (They didn’t impact model RMSE very much) No, they don’t change slopes all that much either. Code for table. nap_slopes &lt;- nap_mods %&gt;% select(-data) %&gt;% mutate(glance = map(mods, tidy)) %&gt;% unnest(glance) %&gt;% select(-mods,-std.error,-statistic) %&gt;% pivot_wider(names_from = &#39;term&#39;, values_from = &#39;estimate&#39;) %&gt;% kable(caption = &quot;Varying chlorophyll ratios and summary of slopes across parameters.&quot;) # kable(nap_slopes) %&gt;% # kable_paper() %&gt;% # scroll_box(width = &#39;100%&#39;, height = &#39;600px&#39;) %&gt;% # kable_styling(bootstrap_options = &#39;striped&#39;, full_width = T) Table 3.2: Varying chlorophyll ratios and summary of slopes across parameters. chl_ratio p.value tss_dead doc chl_a 50 0 0.0305438 0.0739141 0.0107571 100 0 0.0303281 0.0734118 0.0129565 200 0 0.0294995 0.0731412 0.0184780 234 0 0.0305790 0.0752755 0.0098798 3.2 Final Decision Based on the above approaches and logic, the chl-a to biomass multiplier does not impact model performance very much. As such, we are going to use the 234 log ratio going forward. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
